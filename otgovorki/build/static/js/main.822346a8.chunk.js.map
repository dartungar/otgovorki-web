{"version":3,"sources":["components/TextBox.js","components/SettingsItem.js","components/SettingsColumn.js","components/SettingsBox.js","components/Header.js","components/Footer.js","components/Settings.js","components/InfoPopover.js","components/ButtonRow.js","components/App.js","index.js"],"names":["TextBox","props","useState","text","setText","isLoading","setIsLoading","isCopyMessageVisible","setIsCopyMessageVisible","handleDoubleClickOrTouch","navigator","clipboard","writeText","console","log","useEffect","setTimeout","isSexMale","className","role","onDoubleClick","onTouchStart","SettingsItem","isActive","setIsActive","newSettings","setNewSettings","isDisabled","setIsDisabled","adequacyLevel","settings","filter","setting","settingTypeID","type","checked","disabled","label","title","id","settingID","name","onChange","event","target","Number","map","onCheck","SettingsColumn","updateSettings","onChangeSettings","items","item","index","key","value","SettingsBox","settingTypes","getColumnItems","settingTypeObj","isHidden","Form","Row","Col","md","sm","Header","Navbar","Brand","class","Footer","href","settingsList","settingTypesList","InfoPopover","popover","Popover","Title","as","Content","OverlayTrigger","trigger","placement","overlay","children","ButtonRow","Button","variant","onClick","handleClickSettings","handleClickSubmit","App","defaultSettings","setSettings","isSettingsShown","setIsSettingsShown","params","plausibility","theme","sex","tense","composeParameters","fetch","method","mode","then","res","json","data","prevVal","new_settings","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.822346a8.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nfunction TextBox(props) {\r\n    const [text, setText] = useState();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isCopyMessageVisible, setIsCopyMessageVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(props.isLoading);\r\n        setText(props.text);\r\n    }, [props.isLoading, props.text]);\r\n\r\n    useEffect(() => {\r\n        if (isCopyMessageVisible) {\r\n          setTimeout(() => {\r\n            setIsCopyMessageVisible(false);\r\n          }, 1000)\r\n        }\r\n      })\r\n\r\n    function handleDoubleClickOrTouch() {\r\n        navigator.clipboard.writeText(text);\r\n        setIsCopyMessageVisible(true);\r\n        console.log(isCopyMessageVisible);\r\n    }\r\n\r\n    console.log(props.isSexMale);\r\n\r\n    return <div className=\"text-box\">\r\n                <p className={`on-copy-message ${isCopyMessageVisible ? \"visibility-visible\" : \"visibility-hidden\"}`}>—Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ</p>\r\n                {isLoading \r\n                ? <div className=\"loader-box\"><span className=\"emoji-loader\" role=\"img\">{props.isSexMale ? \"ü§∑‚Äç‚ôÇÔ∏è\" : \"ü§∑‚Äç‚ôÄÔ∏è\"}</span> </div>\r\n                : \r\n                <p onDoubleClick={handleDoubleClickOrTouch} onTouchStart={handleDoubleClickOrTouch}>{text}</p>}\r\n         \r\n            </div> \r\n \r\n}\r\n\r\nexport default TextBox;","import React, {useState, useEffect} from \"react\";\r\n\r\nfunction SettingsItem(props) {\r\n\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [newSettings, setNewSettings] = useState();\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsActive(props.isActive);\r\n    }, [props.isActive])\r\n\r\n\r\n    let adequacyLevel = props.settings.filter(setting => {return setting.settingTypeID === 1 && setting.isActive === true})[0][\"id\"];\r\n\r\n    useEffect(() => {\r\n        if (adequacyLevel !== 1) {\r\n            if (props.settingTypeID !== 1) {\r\n                setIsDisabled(true);\r\n            } \r\n        } else {\r\n            setIsDisabled(false);\r\n        }\r\n    }, [adequacyLevel, props.settings, props.settingTypeID])\r\n\r\n\r\n    function handleChange(event) {\r\n        console.log('click event', props.settingID);\r\n        if (!isActive) {\r\n            const {id, name} = event.target;\r\n            setIsActive(true);\r\n            findAndChangeOption(Number(id), Number(name));\r\n            props.onCheck(newSettings);\r\n        } \r\n    }\r\n\r\n    function findAndChangeOption(settingID, settingTypeID) {\r\n        setNewSettings(props.settings.map(setting => {\r\n            if (setting.settingTypeID === settingTypeID) {\r\n                if (setting.id === settingID) {\r\n                    setting.isActive = true;\r\n                } else {\r\n                    setting.isActive = false;\r\n                }\r\n            }\r\n            return setting;\r\n        })) \r\n    }\r\n\r\n        return <div>\r\n            <input \r\n            className=\"form-check-input\"\r\n            type='radio' \r\n            checked={isActive}\r\n            disabled={isDisabled}\r\n            label={props.title} \r\n            id={props.settingID}\r\n            name={props.settingTypeID}\r\n            onChange={handleChange}\r\n        /> <label className=\"form-check-label\">{props.title}</label>\r\n        </div>\r\n}\r\n\r\nexport default SettingsItem;","import React, {useState} from \"react\";\r\nimport SettingsItem from \"./SettingsItem\"\r\n\r\nfunction SettingsColumn(props) {\r\n    const [newSettings, setNewSettings] = useState();\r\n\r\n    function updateSettings(newSettings) {\r\n        setNewSettings(newSettings);\r\n        props.onChangeSettings(newSettings);\r\n    }\r\n\r\n    return <div> \r\n                <h5>{props.title}</h5>\r\n                <div className=\"form-check settings-column\">\r\n                    {props.items.map((item, index) => {\r\n                        return <SettingsItem \r\n                        key={index}\r\n                        isActive={item.isActive}\r\n                        settingID={item.id}\r\n                        settingTypeID={item.settingTypeID}\r\n                        title={item.title} \r\n                        value={item.value}\r\n                        settings={props.settings}\r\n                        onCheck={updateSettings}\r\n                        />\r\n                    }\r\n\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n\r\n}\r\n\r\nexport default SettingsColumn;","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport SettingsColumn from \"./SettingsColumn\";\r\n\r\nfunction SettingsBox(props) {\r\n  const settingTypes = props.settingTypes;\r\n\r\n  const [newSettings, setNewSettings] = useState();\r\n\r\n  function updateSettings(newSettings) {\r\n    setNewSettings(newSettings);\r\n    props.onChangeSettings(newSettings);\r\n  }\r\n\r\n  function getColumnItems(settingTypeObj) {\r\n    return props.settings.filter(item => item.settingTypeID === settingTypeObj.id);\r\n  }\r\n\r\n  return (\r\n    <div className={`settings-box container-fluid ${props.isHidden && \"visibility-hidden\"}`}>\r\n      <Form>\r\n        <Form.Row>\r\n        <Col  md={4} sm={6}>\r\n          <SettingsColumn\r\n            items={getColumnItems(settingTypes[0])}\r\n            title={settingTypes[0][\"title\"]}\r\n            settings={props.settings}\r\n            onChangeSettings={updateSettings}\r\n          />\r\n        </Col>\r\n        <Col  md={4} sm={6}>\r\n          <SettingsColumn\r\n            items={getColumnItems(settingTypes[1])}\r\n            title={settingTypes[1][\"title\"]}\r\n            settings={props.settings}\r\n            onChangeSettings={updateSettings}\r\n          />\r\n        </Col>\r\n        <Col md={4} sm={6}>\r\n          <SettingsColumn\r\n            items={getColumnItems(settingTypes[2])}\r\n            title={settingTypes[2][\"title\"]}\r\n            settings={props.settings}\r\n            onChangeSettings={updateSettings}\r\n          />\r\n            <SettingsColumn\r\n            items={getColumnItems(settingTypes[3])}\r\n            title={settingTypes[3][\"title\"]}\r\n            settings={props.settings}\r\n            onChangeSettings={updateSettings}\r\n          />\r\n        </Col>\r\n        <Col  md={3} sm={6}></Col>\r\n        </Form.Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingsBox;\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nfunction Header(){\r\n    return <Navbar className=\"header centered-navbar justify-content-center\">\r\n                <Navbar.Brand><h3>otgovorki <span class=\"text-dimmed\">Œ±</span></h3></Navbar.Brand>\r\n                {/* <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse className=\"m-auto\" id=\"basic-navbar-nav\"> */}\r\n                    {/* <Nav>\r\n                        <Nav.Link>\r\n                            –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä\r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            –¢–æ–ø\r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            –û–± –∞–≤—Ç–æ—Ä–µ\r\n                        </Nav.Link>\r\n                    </Nav> */}\r\n                {/* </Navbar.Collapse> */}\r\n\r\n            </Navbar>\r\n\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer(){\r\n    return <p className=\"footer text-center text-nowrap\">¬© <a href=\"https://github.com/dartungar\">dartungar</a>, 2020</p>\r\n            \r\n}\r\n\r\nexport default Footer;\r\n","let settingsList = [\r\n        { id: 1, settingTypeID: 1, title: \"–°—Ç–∞—Ä–∞—é—Å—å\", value: \"adequate\", isActive: true },\r\n        { id: 2, settingTypeID: 1, title: \"–°–º–µ—à—É\", value: \"funny\", isActive: false },\r\n        { id: 3, settingTypeID: 1, title: \"–ë—Ä–µ–∂—É\", value: \"insane\", isActive: false },\r\n        { id: 4, settingTypeID: 2, title: \"–°–ª—É—á–∞–π–Ω–∞—è\", value: \"random\", isActive: true },\r\n        { id: 5, settingTypeID: 2, title: \"–†–∞–±–æ—Ç–∞\", value: \"work\", isActive: false },\r\n        { id: 6, settingTypeID: 2, title: \"–£—á–µ–±–∞\", value: \"study\", isActive: false },\r\n        { id: 7, settingTypeID: 2, title: \"–ó–¥–æ—Ä–æ–≤—å–µ\", value: \"health\", isActive: false },\r\n        { id: 8, settingTypeID: 2, title: \"–°–µ–º—å—è\", value: \"family\", isActive: false },\r\n        { id: 9, settingTypeID: 2, title: \"–õ–∏—á–Ω–æ–µ\", value: \"personal\", isActive: false },\r\n        { id: 10, settingTypeID:2, title: \"–î–æ—Å—É–≥\", value: \"leisure\", isActive: false },\r\n        { id: 11, settingTypeID: 3, title: \"–ú—É–∂—Å–∫–æ–π\", value: \"masc\", isActive: true },\r\n        { id: 12, settingTypeID: 3, title: \"–ñ–µ–Ω—Å–∫–∏–π\", value: \"femn\", isActive: false },\r\n        { id: 13, settingTypeID: 4, title: \"–ü—Ä–æ—à–ª–æ–µ\", value: \"past\", isActive: false },\r\n        { id: 14, settingTypeID: 4, title: \"–ë—É–¥—É—â–µ–µ\", value: \"futr\", isActive: true },\r\n      ]\r\n\r\n  let settingTypesList = [\r\n      {id: 1, name: \"plausibility\", title: \"–ê–¥–µ–∫–≤–∞—Ç–Ω–æ—Å—Ç—å\"},\r\n      {id: 2, name: \"theme\", title: \"–¢–µ–º–∞\"},\r\n      {id: 3, name: \"sex\", title: \"–í–∞—à –ø–æ–ª\"},\r\n      {id: 4, name: \"tense\", title: \"–í—Ä–µ–º—è\"},\r\n  ]\r\n\r\n  export {settingsList, settingTypesList};","import React from \"react\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\n\r\nfunction InfoPopover(props) {\r\n    const popover = (\r\n        <Popover id=\"info-popover\">\r\n            <Popover.Title as=\"h3\">–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≥–æ–≤–æ—Ä–æ–∫</Popover.Title>\r\n            <Popover.Content>\r\n                <p>üîÑ - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≥–æ–≤–æ—Ä–∫—É</p>\r\n                <p>‚öô - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</p>\r\n                <p>  –∞–¥–µ–∫–≤–∞—Ç–Ω–æ—Å—Ç—å (—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ / –Ω–µ –æ—á–µ–Ω—å / –±—Ä–µ–¥)</p>\r\n                <p>  —Ç–µ–º–∞</p>\r\n                <p>  –≤–∞—à –ø–æ–ª (\"–∏–∑–≤–∏–Ω–∏, —è –∑–∞–±—ã–ª(–∞) ...\")</p>\r\n                <p>  –≤—Ä–µ–º—è (\"–∏–∑–≤–∏–Ω–∏, –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –±—ã–ª ... / –∏–∑–≤–∏–Ω–∏, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è, –±—É–¥—É ...\")</p>\r\n            </Popover.Content>\r\n        </Popover>\r\n    );\r\n\r\n    return <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>{props.children}</OverlayTrigger>\r\n\r\n}\r\n\r\nexport default InfoPopover;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InfoPopover from \"./InfoPopover\";\r\nimport {FaCog, FaRedoAlt, FaQuestion} from \"react-icons/fa\"\r\n\r\nfunction ButtonRow(props) {\r\n    return <div className=\"button-row d-flex flex-row\">\r\n        <Button\r\n        className=\"custom-btn custom-btn-outline\"\r\n        variant=\"outline-secondary\"\r\n        disabled={props.isLoading}\r\n        onClick={props.handleClickSettings}\r\n        >\r\n            <FaCog/>\r\n        </Button>\r\n        <Button\r\n        className=\"custom-btn custom-btn-filled\"\r\n        variant=\"dark\"\r\n        disabled={props.isLoading}\r\n        onClick={props.handleClickSubmit}\r\n        >\r\n            <FaRedoAlt/>\r\n        </Button>\r\n        <InfoPopover>\r\n            <Button className=\"custom-btn custom-btn-outline copy-btn\" variant=\"outline-secondary\">\r\n                <FaQuestion/>\r\n            </Button>\r\n        </InfoPopover>\r\n\r\n  </div>\r\n}\r\n\r\nexport default ButtonRow;","import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport TextBox from \"./TextBox\";\nimport SettingsBox from \"./SettingsBox\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport {settingsList, settingTypesList} from \"./Settings\";\nimport ButtonRow from \"./ButtonRow\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../App.css\";\n\nfunction App() {\n  const [text, setText] = useState(\"—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å ‚¨á\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [defaultSettings] = useState(settingsList);\n  const [settingTypes] = useState(settingTypesList);\n  const [settings, setSettings] = useState();\n  const [isSettingsShown, setIsSettingsShown] = useState(false);\n  const [isCopyMessageVisible, setIsCopyMessageVisible] = useState(false);\n\n\n  if (!settings) {\n    setSettings(defaultSettings);\n  }\n\n  function composeParameters() {\n    const params = {\n      plausibility: settings.filter(\n        (item) => {return item.isActive && item.settingTypeID ===1 }\n      )[0][\"value\"],\n      theme: settings.filter((item) => {return item.isActive && item.settingTypeID === 2 })[0][\"value\"],\n      sex: settings.filter((item) => {return item.isActive && item.settingTypeID === 3 })[0][\"value\"],\n      tense: settings.filter((item) => {return item.isActive && item.settingTypeID === 4 })[0][\"value\"],\n    };\n    console.log(params);\n    return params;\n  }\n\n  function isSexMale() {\n    if (!settings) {\n      return true;\n    } else {\n      const sex = settings.filter((item) => {return item.isActive && item.settingTypeID === 3 })[0][\"value\"];\n      if (sex === 'masc') {\n        return true;\n      } else {return false} \n    }\n  }\n\n\n  function handleClickSubmit() {\n    var params = composeParameters();\n    setIsLoading(true);\n    fetch(\n      `http://localhost:5000/api/get?plausibility=${params.plausibility}&theme=${params.theme}&sex=${params.sex}&tense=${params.tense}`,\n        {\n          method: \"GET\",\n          mode: \"cors\",\n        }\n      )\n      .then((res) => res.json())\n      .then((data) => {\n        setText(data);\n        setIsLoading(false);\n      });\n  }\n\n  function handleClickSettings() {\n    setIsSettingsShown(prevVal => {\n      return !prevVal;\n    })\n  }\n\n  function handleChangeSettings(new_settings) {\n    setSettings(new_settings);\n  }\n\n\n  return (\n    <div className=\"app-container d-flex flex-column\">\n      <Header/>\n      <div className=\"main-container d-flex align-items-center flex-column justify-content-center\">\n        <TextBox isLoading={isLoading} text={text} isCopyMessageVisible={isCopyMessageVisible} isSexMale={isSexMale()}/>\n        <ButtonRow isLoading={isLoading} handleClickSubmit={handleClickSubmit} handleClickSettings={handleClickSettings}/>\n        <SettingsBox settings={settings} settingTypes={settingTypes} isHidden={!isSettingsShown} onChangeSettings={handleChangeSettings}/>\n      </div>\n      <div><Footer/></div>\n        \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}